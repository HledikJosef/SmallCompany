@page "/itemModelRecord"

@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize];

@using SmallCompany.ServiceLayer;
@using ServiceLayer.ModelsBlazor;
@inject IPropertiesService propertiesService;
@inject IItemModelService itemModelService;
@inject NavigationManager navigationManager;

<PageTitle>Item-record</PageTitle>


<h1>Vytvoř nový model prvku</h1>
<h5>Vyplň obecný název skupiny, vyber typ prvku(např.materíál, výrobek, zoží..) a zaškrtnutím přiřaď k prvku vhodné vlastnosti a jednotku.</h5>

<EditForm EditContext="editContext" OnSubmit="AddItemModel" FormName="ItemModel">
    <table class="table">
        <tbody>
            <tr>
                <td>
                    <InputText @bind-Value="@ItemGroupName" class="form-control" placeholder="Název skupiny prvků" id="itemGrouName" required />
                </td>

            </tr>
            <tr>
                <td>
                    <InputSelect @bind-Value="ItemType"  class="form-select" id="itemType" required>
                        <option value="">Vyberte typ skupiny</option>
                        @foreach (var itemType in blazorItemTypes)
                        {
                            <option value="@itemType.ItemType">@itemType.ItemType</option>
                        }
                    </InputSelect>
                </td>

            </tr>

            @foreach (var property in BlazorProperties)
            {
                <tr>
                    <td>
                        <InputCheckbox @bind-Value=property.IsValid class ="form-check-input" id="flexCheckDefault" />
                        <label class="form-check-label" for="flexCheckDefault">@property.PropertyName</label>
                    </td>
                </tr>
            }
            <tr>
                <td>
                    <InputSelect @bind-Value="ItemUnit" class="form-select" id="itemUnit" required>
                        <option value="">Vyberte jednotku skupiny</option>
                        @foreach (var unit in blazorUnits)
                        {
                            <option value="@unit.Unit">@unit.Unit</option>
                        }
                    </InputSelect>
                </td>

            </tr>
        </tbody>
    </table>

    <button type="submit" class="btn btn-primary">Ulož záznam</button>

</EditForm>



@if (notification != null)
{
    if (exceptionMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            @notification: @exceptionMessage
        </div>

    }
    else
    {
        <div class="alert alert-success" role="alert">
            @notification
        </div>
    }

}





@code {
    private EditContext? editContext;
    private string? notification;
    private string? exceptionMessage;

    private ItemBlazorModel itemBlazorModel { get; set; } = new();

    private string? ItemGroupName { get; set; } = null;
    private string? ItemUnit { get; set; } = null;
    private string? ItemType { get; set; } = null;

    List<PropertiesBlazorModel> BlazorProperties { get; set; } = new List<PropertiesBlazorModel>();
    List<UnitBlazorModel> blazorUnits { get; set; } = new List<UnitBlazorModel>();
    List<ItemTypeBlazorModel> blazorItemTypes { get; set; } = new List<ItemTypeBlazorModel>();


    protected override void OnInitialized()
    {
        editContext = new(this);

        try
        {
            BlazorProperties = propertiesService.GetBlazorProperties();
            blazorUnits = propertiesService.GetBlazorUnits();
            blazorItemTypes = propertiesService.GetBlazorItemTypes();
        }
        catch (Exception ex)
        {
            exceptionMessage = ex.Message;
            notification = "Nepodařilo se načíst data o skladech a prvcích z databáze ";
        }

    }

    private async Task AddItemModel()
    {
        if (( ItemGroupName is null) || (ItemType is null) || (ItemUnit is null))
        {
            throw new InvalidOperationException();
        }
        try
        {
            itemModelService.CreateItemModel(ItemGroupName, ItemType, BlazorProperties, ItemUnit);
            notification = "Vloženo ";
            await Task.Delay(1300);
            RefreshPage();
        }
        catch (Exception ex)
        {
            exceptionMessage = ex.Message;
            notification = "Záznam se nepodařilo uložit ";
        }

    }

    private void RefreshPage()
    {
        navigationManager.NavigateTo("/itemModelRecord", forceLoad: true);
    }
}
