@page "/itemStockRecord"
@using SmallCompany.ServiceLayer;
@using SmallCompany.ServiceLayer.ModelsBlazor;
@inject IItemModelService itemModelService;
@inject IStockService stockService;
@inject IItemStockService itemStockService;
@inject NavigationManager navigationManager;

<PageTitle>ItemStock-record</PageTitle>

<h1>Vlož prvek na sklad</h1>
<h5>Zvol skupinu a vyplň požadované parametry</h5>

<form class="form-control" @onsubmit="AddItemOnStock" >
    <table class="table">
        <tbody>
            <tr>
                <td>
                    <select class="form-select" @onchange="GetSelectedItemModel" required>
                        <option disabled selected value="">Vyberte typ skupiny</option>
                        @foreach (var itemModel in blazorItemModels)
                        {
                            <option value="@itemModel.ItemGroupName">@itemModel.ItemGroupName</option>
                        }
                    </select>
                </td>

                @if (selectedModel != null)
                {
                    <td>
                        <input class="form-control" type="text" @bind-value="@selectedModel.ItemDescription" readonly>
                    </td>
                    
                }
                
            </tr>
            @if(selectedModel != null)
            {
                <tr>
                    <td>
                        <input class="form-control" type="text" placeholder="Název/Typ" @bind-value=itemStockRecordBlazorModel.ItemType required>
                    </td>

                    @if (selectedModel.ItemColor)
                    {
                        <td>
                            <input class="form-control" type="text" placeholder="Barva" @bind-value=itemStockRecordBlazorModel.ItemColor required>
                        </td>
                    }

                    @if (selectedModel.ItemHardness)
                    {
                        <td>
                            <input class="form-control" type="text" placeholder="Tvrdost (ShA)" @bind-value=itemStockRecordBlazorModel.ItemHardness required>
                        </td>
                    }

                    @if (selectedModel.ItemDensity)
                    {
                        <td>
                            <input class="form-control" type="text" placeholder="Hustota" @bind-value=itemStockRecordBlazorModel.ItemDensity required>
                        </td>
                    }

                    @if (selectedModel.ItemDiameter)
                    {
                        <td>
                            <input class="form-control" type="text" placeholder="Průměr (mm)" @bind-value=itemStockRecordBlazorModel.ItemDiameter required>
                        </td>
                    }

                    @if (selectedModel.ItemWidth)
                    {
                        <td>
                            <input class="form-control" type="text" placeholder="Šířka (mm)" @bind-value=itemStockRecordBlazorModel.ItemWidth required>
                        </td>
                    }

                    @if (selectedModel.ItemLength)
                    {
                        <td>
                            <input class="form-control" type="text" placeholder="Délka (mm)" @bind-value=itemStockRecordBlazorModel.ItemLength required>
                        </td>
                    }

                    @if (selectedModel.ItemHigh)
                    {
                        <td>
                            <input class="form-control" type="text" placeholder="Výška (mm)" @bind-value=itemStockRecordBlazorModel.ItemHigh required>
                        </td>
                    }

                    @if (selectedModel.ItemThickness)
                    {
                        <td>
                            <input class="form-control" type="text" placeholder="Tloušťka/Síla materiálu (mm)" @bind-value=itemStockRecordBlazorModel.ItemThickness required>
                        </td>
                    }

                    @if (selectedModel.ItemWeight)
                    {
                        <td>
                            <input class="form-control" type="text" placeholder="Hmotnost (kg)" @bind-value=itemStockRecordBlazorModel.ItemWeight required>
                        </td>
                    }

                </tr>
                              
                <tr>
                    <td>
                        <input type="text" class="form-control" placeholder="Množství" pattern="[1-9]\d*" @bind-value="itemStockRecordBlazorModel.ItemQuantity" required>
                    </td>
                    <td>
                        <input class="form-control" type="text" @bind-value="@selectedModel.ItemUnit" readonly>
                    </td>
                    <td>
                        <select class="form-select" @onchange="GetSelectedStock" required>
                            <option disabled selected value="">Vyberte sklad</option>
                            @foreach (var stock in blazorStockList)
                            {
                                <option value="@stock.StockTitel">@stock.StockTitel</option>
                            }
                        </select>
                    </td>

                </tr>                

                

                
            }
            
            
        </tbody>
    </table>

    <button type="submit" class="btn btn-primary">Ulož záznam</button>

</form>


@if (notification != null)
{
    if(exceptionMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            @notification: @exceptionMessage
        </div>

    }
    else
    {
        <div class="alert alert-success" role="alert">
            @notification
        </div>        
    }

}


<hr class="my-4">
<h5>Zobraz stav skladu: </h5>
<select class="form-select" @onchange="ReadSelectedStock">
    <option disabled selected value="">Vyberte prvek</option>
    @foreach (var itemModel in blazorItemModels)
    {
        <option value="@itemModel.ItemGroupName">@itemModel.ItemGroupName</option>
    }
</select>
<form class="form-control">
    <table class="table table-bordered">
        <thead>Filtr</thead>
        <tbody>
            <tr>
                <td>
                    Skupina
                </td>
                <td>
                    Popis
                </td>
                <td>
                    Typ
                </td>
                <td>
                    Barva
                </td>
                <td>
                    Tvrdost
                </td>
                <td>
                    Hustota
                </td>
                <td>
                    Průměr
                </td>
                <td>
                    Šířka
                </td>
                <td>
                    Délka
                </td>
                <td>
                    Výška
                </td>
                <td>
                    Tloušťka
                </td>
                <td>
                    Hmotnost
                </td>
                <td>
                    Množství
                </td>
                <td>
                    Jednotka
                </td>
                <td>
                    ID skladu
                </td>
            </tr>

        </tbody>
    </table>
</form>
<form class="form-control">
    <table class="table table-bordered">
        <thead>
            <tr>
                <td>
                    Skupina
                </td>
                <td>
                    Popis
                </td>
                <td>
                    Typ
                </td>
                <td>
                    Barva
                </td>
                <td>
                    Tvrdost
                </td>
                <td>
                    Hustota
                </td>
                <td>
                    Průměr
                </td>
                <td>
                    Šířka
                </td>
                <td>
                    Délka
                </td>
                <td>
                    Výška
                </td>
                <td>
                    Tloušťka
                </td>
                <td>
                    Hmotnost
                </td>
                <td>
                    Množství
                </td>
                <td>
                    Jednotka
                </td>
                <td>
                    ID skladu
                </td>
            </tr>

        </thead>
        <tbody>
        
        @if (blazorItemsOnStock != null)
        {
            @foreach (var item in blazorItemsOnStock)
            {
                <tr>
                
                    <td>
                        @item.ItemGroupName
                    </td>
                    <td>
                        @item.ItemDescription
                    </td>
                    <td>
                        @item.ItemType
                    </td>
                    <td>
                        @item.ItemColor
                    </td>
                    <td>
                        @item.ItemHardness
                    </td>
                    <td>
                        @item.ItemDensity
                    </td>
                    <td>
                        @item.ItemDiameter
                    </td>
                    <td>
                        @item.ItemWidth
                    </td>
                    <td>
                        @item.ItemLength
                    </td>
                    <td>
                        @item.ItemHigh
                    </td>
                    <td>
                        @item.ItemThickness
                    </td>
                    <td>
                        @item.ItemWeight
                    </td>
                    <td>
                        @item.ItemQuantity
                    </td>
                    <td>
                        @item.ItemUnit
                    </td>
                    <td>
                        @item.StockId
                    </td>
                </tr>
                
            }
        }        
        </tbody>

    </table>
</form>




@code {
    private ItemBlazorModel selectedModel;
    private ItemStockRecordBlazorModel itemStockRecordBlazorModel;
    private List<ItemStockRecordBlazorModel> blazorItemsOnStock;
    private string? notification;
    private string? exceptionMessage;

    List<ItemBlazorModel>? blazorItemModels = new List<ItemBlazorModel>();
    List<StockBlazorModel>? blazorStockList = new List<StockBlazorModel>();


    protected override void OnInitialized()
    {
        try
        {
            blazorItemModels = itemModelService.GetBlazorItemModels();
            blazorStockList = stockService.GetBlazorStockList();            
        }
        catch(Exception ex)
        {
            exceptionMessage = ex.Message;
            notification = "Nepodařilo se načíst data o skladech a prvcích z databáze ";            
        }

        itemStockRecordBlazorModel = new ItemStockRecordBlazorModel();
    }

    private void GetSelectedItemModel(ChangeEventArgs e)
    {
        string selectedGroupName = e.Value.ToString();
        selectedModel = blazorItemModels.FirstOrDefault(model => model.ItemGroupName == selectedGroupName);     
    }

    private void GetSelectedStock(ChangeEventArgs e)
    {
        string selectedStockTitel = e.Value.ToString();
        itemStockRecordBlazorModel.StockId = blazorStockList.FirstOrDefault(stock => stock.StockTitel == selectedStockTitel).StockId;
    }

    private async void AddItemOnStock()
    {
        try
        {
            itemStockRecordBlazorModel.ItemGroupName = selectedModel.ItemGroupName;
            itemStockRecordBlazorModel.ItemDescription = selectedModel.ItemDescription;
            itemStockRecordBlazorModel.ItemUnit = selectedModel.ItemUnit;            
            itemStockService.CreateItemStockRecord(itemStockRecordBlazorModel);
            notification = "Vloženo ";
            await Task.Delay(1300);
            RefreshPage();
        }
        catch(Exception ex)
        {
            exceptionMessage = ex.Message;
            notification = "Záznam se nepodařilo uložit ";
        }
    }


    private void ReadSelectedStock(ChangeEventArgs e)
    {
        string itemModel = e.Value.ToString();
        blazorItemsOnStock = itemStockService.CreateItemsOnStockOutput(itemModel);
    }      


    private void RefreshPage()
    {
        navigationManager.NavigateTo("/itemStockRecord", forceLoad: true);
    }


}
