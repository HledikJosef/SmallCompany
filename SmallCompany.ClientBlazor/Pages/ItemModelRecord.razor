@page "/itemModelRecord"
@using SmallCompany.ServiceLayer;
@using ServiceLayer.ModelsBlazor;
@inject IPropertiesService propertiesService;
@inject IItemModelService itemModelService;
@inject NavigationManager navigationManager;

<PageTitle>Item-record</PageTitle>

<h1>Vytvoř nový model prvku</h1>
<h5>Vyplň obecný název skupiny, vyber typ prvku(např.materíál, výrobek, zoží..) a zaškrtnutím přiřaď k prvku vhodné vlastnosti a jednotku.</h5>

<form class="form-control" @onsubmit="AddItemModel">
    <table class="table">
        <tbody>
            <tr>
                <td>
                    <input type="text" class="form-control" placeholder="Název skupiny prvků" @bind-value="@itemGroupName" required>
                </td>
                
            </tr>
            <tr>
                <td>
                    <select class="form-select" @bind="itemTyp" required>
                        <option disabled selected value="">Vyberte typ skupiny</option>
                        @foreach(var itemTyp in blazorItemTyps)
                        {
                            <option value="@itemTyp.ItemTyp">@itemTyp.ItemTyp</option>
                        }
                    </select>
                </td>
                
            </tr>

            @foreach (var property in blazorProperties)
            {                
                <tr>
                    <td>                        
                        <input class="form-check-input" type="checkbox" id="flexCheckDefault" @bind-value=property.IsValid>
                        <label class="form-check-label" for="flexCheckDefault">@property.PropertyName</label>                         
                    </td>
                </tr>
            }
            <tr>
                <td>
                    <select class="form-select" @bind="itemUnit" required>
                        <option disabled selected value="">Vyberte jednotku skupiny</option>
                        @foreach (var unit in blazorUnits)
                        {
                            <option value="@unit.Unit">@unit.Unit</option>
                        }
                    </select>
                </td>

            </tr>
        </tbody>     
    </table>

    <button type="submit" class="btn btn-primary">Ulož záznam</button>

</form>



@if (notification != null)
{
    if (exceptionMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            @notification: @exceptionMessage
        </div>

    }
    else
    {
        <div class="alert alert-success" role="alert">
            @notification
        </div>
    }

}




@code {
    private string? notification;
    private string? exceptionMessage;
    private string? itemGroupName = null;
    private string? itemUnit = null;
    private string? itemTyp = null;

    List<PropertiesBlazorModel> blazorProperties = new List<PropertiesBlazorModel>();
    List<UnitBlazorModel> blazorUnits = new List<UnitBlazorModel>();
    List<ItemTypBlazorModel> blazorItemTyps = new List<ItemTypBlazorModel>();


    protected override void OnInitialized()
    {
        try
        {
            blazorProperties = propertiesService.GetBlazorProperties();
            blazorUnits = propertiesService.GetBlazorUnits();
            blazorItemTyps = propertiesService.GetBlazorItemTypes();
        }
        catch(Exception ex)
        {
            exceptionMessage = ex.Message;
            notification = "Nepodařilo se načíst data o skladech a prvcích z databáze ";
        }

    }

    private async void AddItemModel()
    {
        if ((itemGroupName is null) || (itemTyp is null) || (itemUnit is null))
        {
            throw new InvalidOperationException();
        }
        try
        {
            itemModelService.CreateItemModel(itemGroupName, itemTyp, blazorProperties, itemUnit);
            notification = "Vloženo ";
            await Task.Delay(1300);
            RefreshPage();
        }
        catch(Exception ex)
        {
            exceptionMessage = ex.Message;
            notification = "Záznam se nepodařilo uložit ";
        }

    }

    private void RefreshPage()
    {
        navigationManager.NavigateTo("/itemModelRecord", forceLoad: true);
    }
}
